name: Weather App CI/CD

on:
  push:
    branches:
      - main
      - staging
      - feature/**  # allows feature branches like feature/ci-cd-enhancements
  pull_request:
    branches:
      - main
      - staging

jobs:
  ci:
    name: Run CI (Lint, Test, Audit)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run lint (includes security plugin)
        run: npm run lint

      - name: Run tests with coverage
        run: npm test -- --ci --reporters=default --coverage

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Upload coverage to Coveralls
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  production-deploy:
    name: Deploy to GitHub Pages (Production env)
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # only for main

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build project
        run: npm run build

      - name: Deploy to GitHub Pages
        run: |
          npx gh-pages -d public -r https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  staging-deploy:
    name: Deploy to Firebase Hosting (Staging)
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'  # only for staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'  # Updated to Node.js 20 (required for Firebase CLI v14+)

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: weather-runner-70a64
          channelId: live  # optional: can use preview channels too (staging-preview)
          
  docker:
    name: Build & Push Docker Image
    needs: production-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/weather-app:latest
            ghcr.io/${{ github.repository_owner }}/weather-app:latest
